<?php

/**
 * @file
 * A configurable Block containing your blogroll from Google Reader.
 */


/**
 * Implementation of hook_menu().
 */
function gr_blogroll_menu() {
    $items['admin/config/services/blogroll'] = array(
      'title' => t('Blogroll'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gr_blogroll_admin_settings'),
      'access arguments' => array('administer site configuration'),
      'description' => t('Configure the Blogroll to get data from your Google Reader shared items.'),
    );
    return $items;
}

function gr_blogroll_admin_settings() {
  $form['gr_blogroll_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Google Reader blogroll URL'),
      '#default_value' => variable_get('gr_blogroll_url', false),
      '#description' => t('Enter the blogroll URL from your Google Reader Tag.'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_block_info().
 *
 * Showing the block for selecting blogroll on block page
 */
function gr_blogroll_block_info() {
  $block['recent']['info'] = t('Blogroll');
  $block['recent']['properties']['administrative'] = TRUE;
  return $block;
}

/**
 * Implementation of hook_block_view().
 *
 * Rendering the block on region
 */

function gr_blogroll_block_view($delta = '') {
  global $user;

  if (user_access('access content')){
    $items = _gr_blogroll_parse_url();
    if (sizeof($items) > 0 ) {
      $block['subject'] = t('My Blogroll');
      $block['content'] = theme('item_list',array('items'=>$items,'type'=>'ul','attributes'=>array("id"=>"blogroll")) );
    }
  }

  return $block;
}

/*
  Implementation of hook_cron()
  This function is used to clear and rebuild the blogroll in cache.
*/
function gr_blogroll_cron() {
  cache_clear_all("gr_blogroll_data","cache");
  _gr_blogroll_parse_url();
}

/*
  Parse the URL and load the right blogroll from Google Reader
  This function caches the blogroll every time it runs, to save bandwidth and page requests
*/
function _gr_blogroll_parse_url() {
  $url = variable_get('gr_blogroll_url', false);
  $cache = cache_get("gr_blogroll_data");
  $items = $cache ? $cache->data : null;

  if ($url && !$items){
    $url_token = preg_replace("/http(s)?:\/\/(www.)?google.com\/reader\/shared\//","",urldecode($url));
    $json_url = "http://www.google.com/reader/public/javascript-sub/".$url_token;
    $file  = drupal_http_request($json_url);
    $json = json_decode($file->data);
    
    $json_items = $json->items;
    if (sizeof($json_items) > 0) {
      foreach($json_items as $key=>$item) {
        $items[] = l($item->title,trim($item->alternate->href),array('title'=>$item->title),null,null,false,true);
      }
    }
    cache_set("gr_blogroll_data",$items);
  }
  return $items;
}
